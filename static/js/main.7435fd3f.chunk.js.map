{"version":3,"sources":["Pollution.js","App.js","reportWebVitals.js","index.js"],"names":["Pollution","id","className","this","props","sidoName","stationName","coGrade","coValue","no2Grade","no2Value","pm10Grade","pm10Value","pm25Grade","pm25Value","so2Grade","so2Value","o3Grade","o3Value","Component","App","getData","a","serviceKey","state","city","alert","axios","method","url","dataType","then","response","console","log","data","body","items","setState","pollutionDataList","handleChange","e","target","name","value","result","map","type","placeholder","onChange","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7435fd3f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Pollution.css\";\r\n\r\nclass Pollution extends Component{\r\n    render(){\r\n        return(\r\n            <div id=\"pollution-info\" className='pollution-info'>\r\n                <div id=\"station-name\" className='station-name'>\r\n                    <span>측정시 : {this.props.sidoName}</span><br/>\r\n                    <span>측정장소 : {this.props.stationName}</span>\r\n                </div>\r\n                <div id=\"co-area\" className='co-area'>\r\n                    <span>일산화탄소 등급:{this.props.coGrade}</span><br/>\r\n                    <span>일산화탄소 농도:{this.props.coValue}</span>\r\n                </div>\r\n                <div id=\"no2-area\" className='no2-area'>\r\n                    <span>이산화질소 등급:{this.props.no2Grade}</span><br/>\r\n                    <span>이산화질소 농도:{this.props.no2Value}</span>\r\n                </div>\r\n                <div id=\"pm10-area\" className='pm10-area'>\r\n                    <span>미세먼지(10mm) 등급:{this.props.pm10Grade}</span><br/>\r\n                    <span>미세먼지(10mm) 농도:{this.props.pm10Value}</span>\r\n                </div>\r\n                <div id=\"pm25-area\" className='pm25-area'>\r\n                    <span>미세먼지(25mm) 등급:{this.props.pm25Grade}</span><br/>\r\n                    <span>미세먼지(25mm) 농도:{this.props.pm25Value}</span>\r\n                </div>\r\n                <div id=\"so2-area\" className='so2-area'>\r\n                    <span>이산화황 등급:{this.props.so2Grade}</span><br/>\r\n                    <span>이산화황 농도:{this.props.so2Value}</span>\r\n                </div>\r\n                <div id=\"o3-area\" className='o3-area'>\r\n                    <span>오존 등급:{this.props.o3Grade}</span><br/>\r\n                    <span>오존 농도:{this.props.o3Value}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pollution;\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Pollution from './Pollution';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      pollutionDataList:[],\r\n      city:'',\r\n    }\r\n  }\r\n\r\n  getData = async()=>{\r\n\r\n    const serviceKey = 'scbPesyEHWA4akZys78sDQjG6AEq%2FQGj6l3VkN70FwRpmyY2VJM4IVgAsf%2BI2oq%2BJFoG10Tcr4LiFVbc5Kq2ew%3D%3D'\r\n    let sidoName=this.state.city\r\n\r\n    if(sidoName ===''){\r\n      alert(\"도시를 입력하세요!\")\r\n      return\r\n    }\r\n\r\n    await axios({\r\n      method: 'get',\r\n      url: `https://apis.data.go.kr/B552584/ArpltnInforInqireSvc/getCtprvnRltmMesureDnsty?serviceKey=${serviceKey}&returnType=json&numOfRows=100&pageNo=1&sidoName=${sidoName}&ver=1.0`,\r\n      dataType: 'json',\r\n    })\r\n    .then(response => \r\n        { \r\n          console.log(response);\r\n          console.log(response.data.response.body.items);\r\n          this.setState({\r\n            pollutionDataList:response.data.response.body.items\r\n          })\r\n        }\r\n    );\r\n  }\r\n\r\n  handleChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  render(){\r\n\r\n    const result=this.state.pollutionDataList.map(\r\n      (data)=>(<Pollution \r\n        sidoName={data.sidoName}\r\n        stationName={data.stationName} \r\n        coGrade={data.coGrade} coValue={data.coValue}\r\n        no2Grade={data.no2Grade} no2Value={data.no2Value}\r\n        pm10Grade={data.pm10Grade} pm10Value={data.pm10Value}\r\n        pm25Grade={data.pm25Grade} pm25Value={data.pm25Value}\r\n        so2Grade={data.so2Grade} so2Value={data.so2Value}\r\n        o3Grade={data.o3Grade} o3Value={data.o3Value}></Pollution>)\r\n    )\r\n\r\n    return (\r\n    <div id=\"app\" className='pollution-info'>\r\n        <input type=\"text\" placeholder=\"도시를 입력하세요\" onChange={this.handleChange} name=\"city\"/>\r\n        <button onClick={this.getData}>검색</button>\r\n        {result}\r\n    </div>\r\n  );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'; // BrowserRouter 임포트\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}> {/* BrowserRouter로 감싸기 */}\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// 성능 측정을 위한 reportWebVitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}